plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.2'
    id 'io.spring.dependency-management' version '1.1.4'
}

group = 'org.ahmed'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '21'
}

bootJar {
    layered {}
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-hateoas'
    implementation 'org.springframework.boot:spring-boot-starter-aop'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.retry:spring-retry'

    // Lombok for reducing boilerplate code
    implementation 'org.projectlombok:lombok'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // Jackson dependencies for JSON serialization and deserialization
//	implementation 'com.fasterxml.jackson.core:jackson-databind'
    implementation 'com.fasterxml.jackson.core:jackson-annotations:2.14.2'
//	implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310' // For Java 8 Date/Time support
//	implementation 'com.fasterxml.jackson.module:jackson-module-parameter-names' // For Java 8 Parameter Name support
//    implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-xml:2.18.2' // Content Negotiation, Using Header we can get XML response

    // Database dependencies
    // SQL Lite
//    implementation 'org.xerial:sqlite-jdbc:3.41.2.2'
//    implementation 'org.hibernate.orm:hibernate-community-dialects:7.0.0.Alpha2'

    // Add MySQL JDBC
    implementation 'mysql:mysql-connector-java:8.0.33'

    // Documentation
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.3.0'

    // Test dependencies
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
//	testImplementation 'org.springframework.boot:spring-boot-starter-validation'
}

tasks.named('test') {
    useJUnitPlatform()
}
